#   && sign to work with local sql
#url
#spring.datasource.url=jdbc:mysql://localhost:3306/coupons2
#&&spring.datasource.url=jdbc:mysql://localhost:3306/coupons2?createDatabaseIfNotExist=true

#user name
#&&spring.datasource.username=root

#password
#&&spring.datasource.password=12345678

#driver
#&&spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver

#ddl- how we will work with db
#update- create the database tables and keep them
#create-drop- create the database tables and erase them upon exit
#&&spring.jpa.hibernate.ddl-auto= create-drop

#or  create-drop  or update

#dialect
#&&spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.dialect= spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5Dialect

#&&server.port=8080


# Heroku PostgreSq details:
spring.datasource.url=postgres://msrvniokbogfsw:f2f9f9013abe3b101fc29081d15b87f035fefe5a4cfe64733aa74e9e819a6b60@ec2-34-255-32-3.eu-west-1.compute.amazonaws.com:5432/dbpmbc76tdpoif
spring.datasource.username=msrvniokbogfsw
spring.datasource.password=f2f9f9013abe3b101fc29081d15b87f035fefe5a4cfe64733aa74e9e819a6b60
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update):
#spring.jpa.hibernate.ddl-auto=update

#server.servlet.context-path=

server.port=${PORT:8080}


spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

